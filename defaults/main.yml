---
# @var docker_registries_general:description: List of general docker registries to auto login
# @var docker_registries_general:example: >
# docker_registries_general:
#   - url: myregistry.example.com
#     username: docker
#     password: secure
#     email: docker@example.com
#     reauthorize: false
#     state: present
# @end
docker_registries_general: "{{ docker_registries | default([]) }}"

# @var docker_registries_extra:description: List of extra docker registries to auto login
# @var docker_registries_extra:example: >
# docker_registries_extra:
#   - url: myregistry.example.com
#     username: docker
#     password: secure
#     email: docker@example.com
#     reauthorize: false
#     state: present
# @end
docker_registries_extra: []

# @var docker_upstream_version:description: Install from upstream repository
docker_upstream_version: true

# @var docker_mount_flags:description: Optionally define mount flags for systemd
docker_mount_flags:

# @var docker_daemon_command:description: Inject a service override into systemd
docker_daemon_override: false

# @var docker_daemon_command:description: Command executed to start the daemon
docker_daemon_command: /usr/bin/dockerd -H unix://

# @var docker_daemon_config:description: Add config options to daemon.json
docker_daemon_config:
  log-driver: json-file
  log-opts:
    max-size: 5m
    max-file: "3"
  live-restore: true

# @var docker_networks_general:description: List of general docker networks to create
# @var docker_networks_general:example: >
# docker_networks_general:
#   - name: traefik
#     driver: bridge
#     enable_ipv6: true
#     ipam_config:
#       - subnet: fdd1:ac8c:0557:7ce1::/64
#     force: false
#     state: present
# @end
docker_networks_general: []

# @var docker_networks_extra:description: List of extra docker networks to create
# @var docker_networks_extra:example: >
# docker_networks_extra:
#   - name: traefik
#     driver: bridge
#     enable_ipv6: true
#     ipam_config:
#       - subnet: fdd1:ac8c:0557:7ce1::/64
#     force: false
#     state: present
# @end
docker_networks_extra: []

# @var docker_arch:description: Target system architecture used to select correct deb repository
docker_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' or ansible_architecture == 'arm64' else 'amd64' }}"

# @var docker_keyring:description: Path for the repository keyring
docker_keyring: /usr/share/keyrings/docker-archive-keyring.gpg

...
