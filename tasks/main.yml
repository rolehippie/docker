---
- name: Create required dirs
  loop:
    - /etc/systemd/system/docker.service.d
    - /etc/docker
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - docker

- name: Remove legacy repo
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    update_cache: false
    state: absent
  tags:
    - docker

- name: Remove legacy keys
  loop:
    - /etc/apt/keyrings/docker.asc
    - /etc/apt/keyrings/docker.gpg
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  tags:
    - docker

- name: Download repo key
  when:
    - docker_upstream_version
  register: docker_key_download
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: "{{ docker_keyring }}.asc"
    mode: u=rw,g=r,o=r
    force: true
  tags:
    - docker

- name: Check repo key
  when:
    - docker_upstream_version
  register: docker_key_status
  ansible.builtin.stat:
    path: "{{ docker_keyring }}"
  tags:
    - docker

- name: Dearmor repo key
  when:
    - docker_upstream_version
    - docker_key_download.changed or not docker_key_status.stat.exists
  register: docker_key_convert
  changed_when: docker_key_convert.rc == 0
  ansible.builtin.command:
    cmd: "gpg --dearmor -o {{ docker_keyring }} {{ docker_keyring }}.asc"
  tags:
    - docker

- name: Add apt repository
  when: docker_upstream_version
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by={{ docker_keyring }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    update_cache: true
    state: present
  tags:
    - docker

- name: Install required packages
  loop:
    - "{{ 'docker-ce' if docker_upstream_version else 'docker.io' }}"
    - python3-docker
    - "{{ 'python3-distutils' if ansible_distribution_major_version is version('24', '<') else omit }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - docker

- name: Write service override
  when: docker_daemon_override
  notify:
    - Restart docker
  ansible.builtin.template:
    src: override.j2
    dest: /etc/systemd/system/docker.service.d/override.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - docker

- name: Write daemon config
  notify:
    - Restart docker
  ansible.builtin.copy:
    content: "{{ docker_daemon_config | to_nice_json }}"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - docker

- name: Start docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    daemon_reload: true
    masked: false
    enabled: true
  tags:
    - docker

- name: Create defined networks
  loop: "{{ docker_networks_general + docker_networks_extra }}"
  loop_control:
    label: "{{ item.name }}"
  community.docker.docker_network:
    name: "{{ item.name }}"
    enable_ipv6: "{{ item.enable_ipv6 | default(false) }}"
    ipam_config: "{{ item.ipam_config | default([]) }}"
    force: "{{ item.force | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  tags:
    - docker

- name: Handle registry login
  loop: "{{ docker_registries_general + docker_registries_extra }}"
  loop_control:
    label: "{{ item.url | default('hub.docker.com') }}"
  when: item.state | default('present') == 'present'
  register: docker_login_command
  changed_when: false
  failed_when: docker_login_command.rc != 0
  ansible.builtin.command:
    cmd: "docker login --username {{ item.username | quote }} --password-stdin {{ item.url | default('') }}"
    stdin: "{{ item.password }}"
  tags:
    - docker

- name: Handle registry logout
  loop: "{{ docker_registries_general + docker_registries_extra }}"
  loop_control:
    label: "{{ item.url | default('hub.docker.com') }}"
  when: item.state | default('present') == 'absent'
  community.docker.docker_login:
    registry: "{{ item.url | default(omit) }}"
    state: absent
  tags:
    - docker

...
